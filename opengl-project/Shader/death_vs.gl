#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;
layout (location = 3) in vec3 avgNormal;

out vec2 TexCoords;
out vec3 Normal;
out vec3 FragPos;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform float deathcount;
uniform float g;
uniform float p;

void main()
{
	vec3 position = vec3(deathcount,deathcount,deathcount);
	position = aPos + position * avgNormal;
	position = position - vec3(0,0.5 * g * deathcount * deathcount,0);
	if(position.y < p)
		position.y = p;
    	TexCoords = aTexCoords;
   	gl_Position = projection * view * model * vec4(position, 1.0);

	Normal = mat3(transpose(inverse(model)))*aNormal;
	FragPos =vec3(model* vec4(aPos,1.0f)); 
}